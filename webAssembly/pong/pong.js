"use strict";/*Compiled using Cheerp (R) by Leaning Technologies Ltd*/var aSlot=null;var oSlot=0;var nullArray=[null];var nullObj={d:nullArray,o:0};function fetchBuffer(path) {var bytes = null;if (typeof window === 'undefined' && typeof require === 'undefined') {bytes = new Promise( (resolve, reject) => {resolve(read(path,'binary'));});} else if (typeof window === 'undefined') {var fs = require('fs');bytes = new Promise( (resolve, reject) => {fs.readFile(path, function(error, data) {if(error) reject(error);else resolve(data);});});} else {bytes = fetch(path).then(response => response.arrayBuffer());}return bytes;}function x(){var a=null,c=null;C=400;h=400;a="pongcanvas";a=document.getElementById(a);a=a;f=a;a.width=400;a=f;a.height=400;a=document.body;c=f;a.appendChild(c);a=f;c="2d";a=a.getContext(c);i=a;return;}function w(){var c=null,a=null,e=0;c=i;a="24px sans-serif";c.font=a;c=i;a="Hello Canvas";e=h|0;c.fillText(a,0,(+(e+-24|0)));c="str";a="Hello Canvas";console.log(c,a);c="Height";e=h|0;a=String(e);console.log(c,a);return;}function d(a,b){var e=0,g=0,c=null,H=null;c=String();e=a[b]|0;if((e&255)===0){return String(c);}else{g=0;}while(1){H=String.fromCharCode(e<<24>>24);c=c.concat(H);g=g+1|0;e=a[b+g|0]|0;if((e&255)===0){break;}}return String(c);}var i;var E=new Uint8Array([50,52,112,120,32,115,97,110,115,45,115,101,114,105,102,0]);var h;var D=new Uint8Array([115,116,114,0]);var G=new Uint8Array([72,101,105,103,104,116,0]);var C;var B=new Uint8Array([112,111,110,103,99,97,110,118,97,115,0]);var f;var z=new Uint8Array([50,100,0]);var HEAP8=null;var HEAP16=null;var HEAP32=null;var HEAPF32=null;var HEAPF64=null;var __asm=null;function _asm_w(){w();}function _asm_x(){x();}function __dummy() { throw new Error('this should be unreachable'); };var importObject = { imports: {__ZN8Graphics11debugOutputEPKc:_asm_w,__ZN8Graphics16initializeCanvasEii:_asm_x,}};fetchBuffer('pong.wasm').then(bytes => WebAssembly.compile(bytes).then(m => new WebAssembly.Instance(m, importObject),console.log),console.log).then(instance => {HEAP8=new Uint8Array(instance.exports.memory.buffer);HEAP16=new Uint16Array(instance.exports.memory.buffer);HEAP32=new Int32Array(instance.exports.memory.buffer);HEAPF32=new Float32Array(instance.exports.memory.buffer);HEAPF64=new Float64Array(instance.exports.memory.buffer);__asm=instance.exports;instance.exports.y();},console.log).catch(console.log);